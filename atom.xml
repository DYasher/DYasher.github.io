<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小邓同学</title>
  
  <subtitle>每天进步一点点</subtitle>
  <link href="https://dyasher.github.io/atom.xml" rel="self"/>
  
  <link href="https://dyasher.github.io/"/>
  <updated>2021-02-02T09:47:17.402Z</updated>
  <id>https://dyasher.github.io/</id>
  
  <author>
    <name>小邓同学</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Updates were rejected because the tip of your current branch is behind</title>
    <link href="https://dyasher.github.io/2021/02/02/Updates-were-rejected-because-the-tip-of-your-current-branch-is-behind/"/>
    <id>https://dyasher.github.io/2021/02/02/Updates-were-rejected-because-the-tip-of-your-current-branch-is-behind/</id>
    <published>2021-02-02T08:31:46.000Z</published>
    <updated>2021-02-02T09:47:17.402Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Git版本回滚"><a href="#Git版本回滚" class="headerlink" title="Git版本回滚"></a>Git版本回滚</h1><h2 id="在本地版本回滚"><a href="#在本地版本回滚" class="headerlink" title="在本地版本回滚"></a>在本地版本回滚</h2><p>在使用git的时候，版本回滚一般使用在本地的<code>git commit</code> （把暂存区的东西提交到当前分支）后<a id="more"></a>，就是在工作区提交到版本库上，简单理解就是在本地做的操作，此时没有<code>git push</code>所以不涉及到远程仓库问题。</p><p><strong>工作区（learngit）</strong></p><p><img src="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/YoS36u.png" alt="YoS36u"></p><p><strong>版本库</strong></p><p>工作区有一个隐藏目录<code>.git</code>，这个不算工作区，而是Git的版本库。</p><p>Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支<code>master</code>，以及指向<code>master</code>的一个指针叫<code>HEAD</code>。</p><p>![截屏2021-02-02下午4.47.24](<a href="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/%E6%88%AA%E5%B1%8F2021-02-02">https://gitee.com/asheryb/my-images/raw/master/uPicBlog/截屏2021-02-02</a> 下午4.47.24.png)</p><p><strong>关系</strong></p><ul><li><p>第一步是用<code>git add</code>把文件添加进去，实际上就是把文件修改添加到暂存区；</p><p><img src="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/6KJpPi.jpg" alt="6KJpPi"></p></li><li><p>第二步是用<code>git commit</code>提交更改，实际上就是把暂存区的所有内容提交到当前分支。</p><p><img src="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/RE1s1v.jpg" alt="RE1s1v"></p></li></ul><p>因为我们创建Git版本库时，Git自动为我们创建了唯一一个<code>master</code>分支，所以，现在，<code>git commit</code>就是往<code>master</code>分支上提交更改。（此时工作的地方还是在本地操作）</p><p>可以简单理解为，需要提交的文件修改通通放到暂存区，然后，一次性提交暂存区的所有修改。</p><p><img src="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/wCR923.jpg" alt="wCR923"></p><h2 id="远程版本回滚"><a href="#远程版本回滚" class="headerlink" title="远程版本回滚"></a>远程版本回滚</h2><p>测试远程仓库回滚，首先要在本地<code>git push</code> 所有分支更新到远程仓库。做如下的测试：</p><ul><li>添加两个文件：testBack.txt testHEAD ，一个测试在本地退回情况，就是上面的本地回滚。</li><li>先提交一个testBack.txt文件到远程仓库。</li><li>然后再回滚本地版本。</li><li>最后同步到远程仓库中。</li></ul><p>得到如下结果：</p><p><img src="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/%E6%88%AA%E5%B1%8F2021-02-02%20%E4%B8%8B%E5%8D%885.04.48.png" alt="截屏2021-02-02 下午5.04.48"></p><p>在本地的版本已经退回。</p><p><strong>那现在怎样退回远程仓库的版本呢？？</strong></p><p>如果我们直接是<code>git push</code>就会出现如下的错误：</p><p><img src="https://gitee.com/asheryb/my-images/raw/master/uPicBlog/QQ20210202-171306.png" alt="QQ20210202-171306"></p><p>这个问题其实就是，远程repository和我本地的repository冲突导致的，而我在创建版本库后，在github的版本库页面点击了创建README.md文件的按钮创建了说明文档，但是却没有pull到本地。这样就产生了版本冲突的问题。这个问题是比较简单也是比较严重的，网上一些教程直接教一些人使用<code>$ git push -u origin master -f</code>，这个是不可取的，而且十分紧要的事，用这个方法会把现在的本地的版本强制更新到远程仓库上，在多人开发环境中，不能和不建议使用。</p><p><strong>解决办法如下：</strong></p><ol><li>使用强制push的方法：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin master -f</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>这样会使远程修改丢失，一般是不可取的，尤其是多人协作开发的时候。</p><ol start="2"><li>push前先将远程repository修改pull下来</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br><span class="line"></span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>先把远程的仓库下载回来备份</p><ol start="3"><li>若不想merge远程和本地修改，可以先创建新的分支：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git branch [name]</span><br></pre></td></tr></table></figure><p>然后push</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin [name]</span><br></pre></td></tr></table></figure><p><strong>说明：</strong>创建分支</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Git版本回滚&quot;&gt;&lt;a href=&quot;#Git版本回滚&quot; class=&quot;headerlink&quot; title=&quot;Git版本回滚&quot;&gt;&lt;/a&gt;Git版本回滚&lt;/h1&gt;&lt;h2 id=&quot;在本地版本回滚&quot;&gt;&lt;a href=&quot;#在本地版本回滚&quot; class=&quot;headerlink&quot; title=&quot;在本地版本回滚&quot;&gt;&lt;/a&gt;在本地版本回滚&lt;/h2&gt;&lt;p&gt;在使用git的时候，版本回滚一般使用在本地的&lt;code&gt;git commit&lt;/code&gt; （把暂存区的东西提交到当前分支）后</summary>
    
    
    
    <category term="git" scheme="https://dyasher.github.io/categories/git/"/>
    
    
    <category term="git" scheme="https://dyasher.github.io/tags/git/"/>
    
    <category term="git push" scheme="https://dyasher.github.io/tags/git-push/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7设置ssh服务自动启动</title>
    <link href="https://dyasher.github.io/2021/02/01/CentOS-7%E8%AE%BE%E7%BD%AEssh%E6%9C%8D%E5%8A%A1%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/"/>
    <id>https://dyasher.github.io/2021/02/01/CentOS-7%E8%AE%BE%E7%BD%AEssh%E6%9C%8D%E5%8A%A1%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8/</id>
    <published>2021-02-01T09:48:08.000Z</published>
    <updated>2021-02-01T12:34:03.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SSH（Secure-SHell）"><a href="#SSH（Secure-SHell）" class="headerlink" title="SSH（Secure SHell）"></a>SSH（Secure SHell）</h2><p>SSH的英文全称是Secure SHell。通过使用SSH，你可以把所有传输的数据进行加密，这样“中间人”这种攻击方式就不可能实现了，而且也能够防止DNS和IP欺骗。还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。SSH有很多功能，它既可以代替telnet，又可以为ftp、pop、甚至ppp提供一个安全的“通道”。</p><p>SSH在Linux中的服务是sshd，安装openssh后才可开启。CentOS 7 安装后默认情况下是不启动sshd服务，即无法通过ssh服务远程连接。<a id="more"></a><br>首先查看系统是否安装openssh，一般情况想都是默认安装了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -qa | grep ssh</span></span><br><span class="line">libssh2-1.4.3-10.el7.x86_64</span><br><span class="line">openssh-server-6.6.1p1-22.el7.x86_64</span><br><span class="line">openssh-clients-6.6.1p1-22.el7.x86_64</span><br><span class="line">openssh-6.6.1p1-22.el7.x86_64</span><br></pre></td></tr></table></figure><p>如果没有安装可以通过yum在线安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh</span><br></pre></td></tr></table></figure><h2 id="手动设置启动ssh服务"><a href="#手动设置启动ssh服务" class="headerlink" title="手动设置启动ssh服务"></a>手动设置启动ssh服务</h2><p>简单的设置就是在命令行中启动sshd服务。这样做比较快捷直接，但是只能对当前状态有效，一旦重启系统就丢失了该服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl start sshd</span></span><br><span class="line">[root@localhost ~]<span class="comment"># systemctl status sshd</span></span><br><span class="line">● sshd.service - OpenSSH server daemon</span><br><span class="line">Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)</span><br><span class="line">Active: active (running) since Fri 2016-09-16 16:18:24 CST; 6h ago</span><br><span class="line">Docs: man:sshd(8)</span><br><span class="line">man:sshd_config(5)</span><br><span class="line">Main PID: 1031 (sshd)</span><br><span class="line">CGroup: /system.slice/sshd.service</span><br><span class="line">└─1031 /usr/sbin/sshd -D</span><br><span class="line">Sep 16 16:18:24 localhost.localdomain systemd[1]: Starting OpenSSH server daemon…</span><br><span class="line">Sep 16 16:18:25 localhost.localdomain sshd[1031]: Server listening on 0.0.0.0 port 22.</span><br><span class="line">Sep 16 16:18:25 localhost.localdomain sshd[1031]: Server listening on :: port 22.</span><br><span class="line">Sep 16 18:18:14 localhost.localdomain systemd[1]: Started OpenSSH server daemon.</span><br><span class="line">Sep 16 18:29:41 localhost.localdomain sshd[11847]: Accepted password <span class="keyword">for</span> root from 192.168.92.1 port 55149 ssh2</span><br><span class="line">Sep 16 18:37:11 localhost sshd[12969]: Address 192.168.92.1 maps to localhost, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!</span><br><span class="line">Sep 16 18:37:12 localhost sshd[12969]: Accepted password <span class="keyword">for</span> root from 192.168.92.1 port 55391 ssh2</span><br><span class="line">Sep 16 22:09:59 localhost sshd[15252]: Address 192.168.92.1 maps to localhost, but this does not map back to the address - POSSIBLE BREAK-IN ATTEMPT!</span><br><span class="line">Sep 16 22:10:02 localhost sshd[15252]: Accepted password <span class="keyword">for</span> root from 192.168.92.1 port 64452 ssh2</span><br><span class="line">Sep 16 22:22:08 localhost systemd[1]: Started OpenSSH server daemon.</span><br></pre></td></tr></table></figure><h2 id="设置自动启动ssh服务"><a href="#设置自动启动ssh服务" class="headerlink" title="设置自动启动ssh服务"></a>设置自动启动ssh服务</h2><p><strong>1、systemclt设置自动启动</strong></p><p>通过systemctl命令可以将sshd服务加到开机自启动列表里。实现开机自动启动sshd服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> sshd</span><br></pre></td></tr></table></figure><p><strong>2、修改ssh监听端口</strong><br>在<code>sshd_config</code>文件中存放了端口、控制策略等信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>结果如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#       $OpenBSD: sshd_config,v 1.93 2014/01/10 05:59:19 djm Exp $</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This is the sshd server system-wide configuration file.  See</span></span><br><span class="line"><span class="comment"># sshd_config(5) for more information.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># This sshd was compiled with PATH=/usr/local/bin:/usr/bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The strategy used for options in the default sshd_config shipped with</span></span><br><span class="line"><span class="comment"># OpenSSH is to specify options with their default value where</span></span><br><span class="line"><span class="comment"># possible, but leave them commented.  Uncommented options override the</span></span><br><span class="line"><span class="comment"># default value.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If you want to change the port on a SELinux system, you have to tell</span></span><br><span class="line"><span class="comment"># SELinux about this change.</span></span><br><span class="line"><span class="comment"># semanage port -a -t ssh_port_t -p tcp #PORTNUMBER</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#Port 22</span></span><br><span class="line"><span class="comment">#AddressFamily any</span></span><br><span class="line"><span class="comment">#ListenAddress 0.0.0.0</span></span><br><span class="line"><span class="comment">#ListenAddress ::</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The default requires explicit activation of protocol 1</span></span><br><span class="line"><span class="comment">#Protocol 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># HostKey for protocol version 1</span></span><br><span class="line"><span class="comment">#HostKey /etc/ssh/ssh_host_key</span></span><br><span class="line"><span class="comment"># HostKeys for protocol version 2</span></span><br><span class="line">HostKey /etc/ssh/ssh_host_rsa_key</span><br><span class="line"><span class="comment">#HostKey /etc/ssh/ssh_host_dsa_key</span></span><br><span class="line">HostKey /etc/ssh/ssh_host_ecdsa_key</span><br><span class="line">HostKey /etc/ssh/ssh_host_ed25519_key</span><br><span class="line"></span><br><span class="line"><span class="comment"># Lifetime and size of ephemeral version 1 server key</span></span><br><span class="line"><span class="comment">#KeyRegenerationInterval 1h</span></span><br><span class="line"><span class="comment">#ServerKeyBits 1024</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ciphers and keying</span></span><br><span class="line"><span class="comment">#RekeyLimit default none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Logging</span></span><br><span class="line"><span class="comment"># obsoletes QuietMode and FascistLogging</span></span><br><span class="line"><span class="comment">#SyslogFacility AUTH</span></span><br><span class="line">SyslogFacility AUTHPRIV</span><br><span class="line"><span class="comment">#LogLevel INFO</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Authentication:</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LoginGraceTime 2m</span></span><br><span class="line"><span class="comment">#PermitRootLogin yes</span></span><br><span class="line"><span class="comment">#StrictModes yes</span></span><br><span class="line"><span class="comment">#MaxAuthTries 6</span></span><br><span class="line"><span class="comment">#MaxSessions 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#RSAAuthentication yes</span></span><br><span class="line"><span class="comment">#PubkeyAuthentication yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2</span></span><br><span class="line"><span class="comment"># but this is overridden so installations will only check .ssh/authorized_keys</span></span><br><span class="line">AuthorizedKeysFile      .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment">#AuthorizedPrincipalsFile none</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#AuthorizedKeysCommand none</span></span><br><span class="line"><span class="comment">#AuthorizedKeysCommandUser nobody</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For this to work you will also need host keys in /etc/ssh/ssh_known_hosts</span></span><br><span class="line"><span class="comment">#RhostsRSAAuthentication no</span></span><br><span class="line"><span class="comment"># similar for protocol version 2</span></span><br><span class="line"><span class="comment">#HostbasedAuthentication no</span></span><br><span class="line"><span class="comment"># Change to yes if you don&#x27;t trust ~/.ssh/known_hosts for</span></span><br><span class="line"><span class="comment"># RhostsRSAAuthentication and HostbasedAuthentication</span></span><br><span class="line"><span class="comment">#IgnoreUserKnownHosts no</span></span><br><span class="line"><span class="comment"># Don&#x27;t read the user&#x27;s ~/.rhosts and ~/.shosts files</span></span><br><span class="line"><span class="comment">#IgnoreRhosts yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># To disable tunneled clear text passwords, change to no here!</span></span><br><span class="line"><span class="comment">#PasswordAuthentication yes</span></span><br><span class="line"><span class="comment">#PermitEmptyPasswords no</span></span><br><span class="line">PasswordAuthentication yes</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change to no to disable s/key passwords</span></span><br><span class="line"><span class="comment">#ChallengeResponseAuthentication yes</span></span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"></span><br><span class="line"><span class="comment"># Kerberos options</span></span><br><span class="line"><span class="comment">#KerberosAuthentication no</span></span><br><span class="line"><span class="comment">#KerberosOrLocalPasswd yes</span></span><br><span class="line"><span class="comment">#KerberosTicketCleanup yes</span></span><br><span class="line"><span class="comment">#KerberosGetAFSToken no</span></span><br><span class="line"><span class="comment">#KerberosUseKuserok yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># GSSAPI options</span></span><br><span class="line">GSSAPIAuthentication yes</span><br><span class="line">GSSAPICleanupCredentials no</span><br><span class="line"><span class="comment">#GSSAPIStrictAcceptorCheck yes</span></span><br><span class="line"><span class="comment">#GSSAPIKeyExchange no</span></span><br><span class="line"><span class="comment">#GSSAPIEnablek5users no</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set this to &#x27;yes&#x27; to enable PAM authentication, account processing,</span></span><br><span class="line"><span class="comment"># and session processing. If this is enabled, PAM authentication will</span></span><br><span class="line"><span class="comment"># be allowed through the ChallengeResponseAuthentication and</span></span><br><span class="line"><span class="comment"># PasswordAuthentication.  Depending on your PAM configuration,</span></span><br><span class="line"><span class="comment"># PAM authentication via ChallengeResponseAuthentication may bypass</span></span><br><span class="line"><span class="comment"># the setting of &quot;PermitRootLogin without-password&quot;.</span></span><br><span class="line"><span class="comment"># If you just want the PAM account and session checks to run without</span></span><br><span class="line"><span class="comment"># PAM authentication, then enable this but set PasswordAuthentication</span></span><br><span class="line"><span class="comment"># and ChallengeResponseAuthentication to &#x27;no&#x27;.</span></span><br><span class="line"><span class="comment"># WARNING: &#x27;UsePAM no&#x27; is not supported in Red Hat Enterprise Linux and may cause several</span></span><br><span class="line"><span class="comment"># problems.</span></span><br><span class="line">UsePAM yes</span><br><span class="line"></span><br><span class="line"><span class="comment">#AllowAgentForwarding yes</span></span><br><span class="line"><span class="comment">#AllowTcpForwarding yes</span></span><br><span class="line"><span class="comment">#GatewayPorts no</span></span><br><span class="line">X11Forwarding yes</span><br><span class="line"><span class="comment">#X11DisplayOffset 10</span></span><br><span class="line"><span class="comment">#X11UseLocalhost yes</span></span><br><span class="line"><span class="comment">#PermitTTY yes</span></span><br><span class="line"><span class="comment">#PrintMotd yes</span></span><br><span class="line"><span class="comment">#PrintLastLog yes</span></span><br><span class="line"><span class="comment">#TCPKeepAlive yes</span></span><br><span class="line"><span class="comment">#UseLogin no</span></span><br><span class="line">UsePrivilegeSeparation sandbox          <span class="comment"># Default for new installations.</span></span><br><span class="line"><span class="comment">#PermitUserEnvironment no</span></span><br><span class="line"><span class="comment">#Compression delayed</span></span><br><span class="line"><span class="comment">#ClientAliveInterval 0</span></span><br><span class="line"><span class="comment">#ClientAliveCountMax 3</span></span><br><span class="line"><span class="comment">#ShowPatchLevel no</span></span><br><span class="line"><span class="comment">#UseDNS yes</span></span><br><span class="line"><span class="comment">#PidFile /var/run/sshd.pid</span></span><br><span class="line"><span class="comment">#MaxStartups 10:30:100</span></span><br><span class="line"><span class="comment">#PermitTunnel no</span></span><br><span class="line"><span class="comment">#ChrootDirectory none</span></span><br><span class="line"><span class="comment">#VersionAddendum none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># no default banner path</span></span><br><span class="line"><span class="comment">#Banner none</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Accept locale-related environment variables</span></span><br><span class="line">AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES</span><br><span class="line">AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT</span><br><span class="line">AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE</span><br><span class="line">AcceptEnv XMODIFIERS</span><br><span class="line"></span><br><span class="line"><span class="comment"># override default of no subsystems</span></span><br><span class="line">Subsystem       sftp    /usr/libexec/openssh/sftp-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># Example of overriding settings on a per-user basis</span></span><br><span class="line"><span class="comment">#Match User anoncvs</span></span><br><span class="line"><span class="comment">#       X11Forwarding no</span></span><br><span class="line"><span class="comment">#       AllowTcpForwarding no</span></span><br><span class="line"><span class="comment">#       PermitTTY no</span></span><br><span class="line"><span class="comment">#       ForceCommand cvs server</span></span><br></pre></td></tr></table></figure><p><strong>3、需要修改的地方</strong></p><ul><li>首先修改端口，端口设置为自定义端口，即1024之后的端口，这里设置为8090。</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">port <span class="number">8090</span></span><br></pre></td></tr></table></figure><ul><li>禁止空密码用户登录。</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitEmptyPasswords <span class="keyword">no</span></span><br></pre></td></tr></table></figure><ul><li>开启密码登录授权（默认即开启）</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure><ul><li>禁止root账户使用ssh登录，这种设置通常用于互联网服务器，防止提权后用root账户登录搞破坏。</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin <span class="keyword">no</span></span><br></pre></td></tr></table></figure><p><strong>4、注意其中关于port的提示文字</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If you want to change the port on a SELinux system, you have to tell</span></span><br><span class="line"><span class="comment"># SELinux about this change.</span></span><br><span class="line"><span class="comment"># semanage port -a -t ssh_port_t -p tcp #PORTNUMBER</span></span><br></pre></td></tr></table></figure><p>修改端口的时候需要添加到防火墙的控制中，否则无法使用ssh连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># semanage port -l | grep ssh #查看当前ssh服务监听的端口</span></span><br><span class="line">ssh_port_t tcp 22</span><br><span class="line">[root@localhost ~]<span class="comment"># semanage port -a -t ssh_port_t -p tcp 8090 #增加监听端口8090</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># semanage port -l | grep ssh</span></span><br><span class="line">ssh_port_t tcp 8090,22</span><br></pre></td></tr></table></figure><p>semanage只是端口工具，修改防火墙只能使用firewall-cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ssh]<span class="comment"># yum provides firewall-cmd #查找防火墙工具所在的包</span></span><br><span class="line">Loaded plugins: fastestmirror</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line">* base: mirror.bit.edu.cn</span><br><span class="line">* extras: mirrors.btte.net</span><br><span class="line">* updates: mirrors.btte.net</span><br><span class="line">firewalld-0.3.9-14.el7.noarch : A firewall daemon with D-BUS interface providing a dynamic firewall</span><br><span class="line">Repo : base</span><br><span class="line">Matched from:</span><br><span class="line">Filename : /usr/bin/firewall-cmd</span><br><span class="line"></span><br><span class="line">[root@localhost ssh]<span class="comment"># yum -y install firewalld #安装防火墙工具</span></span><br><span class="line"></span><br><span class="line">[root@localhost ssh]<span class="comment"># systemctl start firewalld #启动防火墙服务</span></span><br><span class="line"></span><br><span class="line">[root@localhost ssh]<span class="comment"># systemctl status firewalld #查看防火墙状态</span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; vendor preset: enabled)</span><br><span class="line">Active: active (running) since Sat 2016-09-17 04:22:15 CST; 15s ago</span><br><span class="line">Main PID: 16979 (firewalld)</span><br><span class="line">CGroup: /system.slice/firewalld.service</span><br><span class="line">└─16979 /usr/bin/python -Es /usr/sbin/firewalld –nofork –nopid</span><br><span class="line">Sep 17 04:22:14 localhost systemd[1]: Starting firewalld - dynamic firewall daemon…</span><br><span class="line">Sep 17 04:22:15 localhost systemd[1]: Started firewalld - dynamic firewall daemon.</span><br><span class="line">[root@localhost ssh]<span class="comment"># firewall-cmd –zone=public –add-port=8090/tcp –permanent #防火墙中允许8090端口通过</span></span><br><span class="line">success</span><br><span class="line"></span><br><span class="line">[root@localhost ssh]<span class="comment"># semanage port -m -t ssh_port_t -p tcp 8090 #将ssh服务修改为8090端口</span></span><br><span class="line">[root@localhost ssh]<span class="comment"># firewall-cmd –zone=public –remove-port=22/tcp –permanent #删除22端口</span></span><br><span class="line">success</span><br><span class="line">[root@localhost ssh]<span class="comment"># firewall-cmd –reload #重新加载防火墙服务配置</span></span><br><span class="line">success</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;SSH（Secure-SHell）&quot;&gt;&lt;a href=&quot;#SSH（Secure-SHell）&quot; class=&quot;headerlink&quot; title=&quot;SSH（Secure SHell）&quot;&gt;&lt;/a&gt;SSH（Secure SHell）&lt;/h2&gt;&lt;p&gt;SSH的英文全称是Secure SHell。通过使用SSH，你可以把所有传输的数据进行加密，这样“中间人”这种攻击方式就不可能实现了，而且也能够防止DNS和IP欺骗。还有一个额外的好处就是传输的数据是经过压缩的，所以可以加快传输的速度。SSH有很多功能，它既可以代替telnet，又可以为ftp、pop、甚至ppp提供一个安全的“通道”。&lt;/p&gt;
&lt;p&gt;SSH在Linux中的服务是sshd，安装openssh后才可开启。CentOS 7 安装后默认情况下是不启动sshd服务，即无法通过ssh服务远程连接。</summary>
    
    
    
    <category term="CentOS" scheme="https://dyasher.github.io/categories/CentOS/"/>
    
    <category term="Linux" scheme="https://dyasher.github.io/categories/CentOS/Linux/"/>
    
    <category term="SSH" scheme="https://dyasher.github.io/categories/CentOS/SSH/"/>
    
    
    <category term="SSH" scheme="https://dyasher.github.io/tags/SSH/"/>
    
    <category term="Linux" scheme="https://dyasher.github.io/tags/Linux/"/>
    
  </entry>
  
</feed>
